{"version":3,"file":"static/js/543.49752821.chunk.js","mappings":"yOAEaA,EAAQC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAKlBC,EAAaH,EAAAA,EAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6DAK1BG,EAAYL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2GAOtBK,EAAOP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kOAahBO,EAAWT,EAAAA,EAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2eAsBpBS,EAAMX,EAAAA,EAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oGAOhBW,EAAUb,EAAAA,EAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2HAQpBa,EAAUf,EAAAA,EAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+KASpBe,EAAWjB,EAAAA,EAAAA,EAAQkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0FAMnBiB,EAAQnB,EAAAA,EAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,sDAKjBmB,EAAarB,EAAAA,EAAAA,EAAQsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qD,GAKTF,EAAAA,EAAAA,EAAQuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,sD,4gVCNjC,EAnEoB,WAClB,IAAMsB,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAE7B,OACEC,EAAAA,EAAAA,MAACpB,EAAS,CAAAqB,SAAA,EACRC,EAAAA,EAAAA,KAACR,EAAK,CAAAO,SAAC,2FACPD,EAAAA,EAAAA,MAACd,EAAG,CAAAe,SAAA,EACFC,EAAAA,EAAAA,KAACN,EAAU,CAAAK,SAAC,SACZC,EAAAA,EAAAA,KAAC5B,EAAK,CAAA2B,SACHF,EAAQI,KAAI,SAACC,EAAIC,GAAK,OACrBH,EAAAA,EAAAA,KAACI,EAAAA,GAAAA,SAAoB,CAEnBC,MAAO,CACLC,MAAO,SACPC,KAAM,QACNR,UAEFC,EAAAA,EAAAA,KAACxB,EAAU,CAACgC,KAAK,SAAQT,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,IAAU,OAPRN,EASgB,UAK7BH,EAAAA,EAAAA,KAACpB,EAAI,CAAAmB,SACK,OAAPW,QAAO,IAAPA,OAAO,EAAPA,EAAAA,KAAa,SAACC,GAAI,OACjBX,EAAAA,EAAAA,KAAClB,EAAQ,CAAAiB,UACPD,EAAAA,EAAAA,MAACZ,EAAO,CAAAa,SAAA,EACND,EAAAA,EAAAA,MAACd,EAAG,CAAAe,SAAA,EACFC,EAAAA,EAAAA,KAACZ,EAAO,CAAAW,UACNC,EAAAA,EAAAA,KAACI,EAAAA,GAAAA,SAAoB,CACnBC,MAAO,CACLC,MAAO,UACPC,KAAM,QACNR,UAEFC,EAAAA,EAAAA,KAACY,EAAAA,IAAM,SAGXd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACV,EAAQ,CAAAS,SAAEY,EAAKE,QAChBb,EAAAA,EAAAA,KAAC5B,EAAK,CAAA2B,SACHF,EAAQI,KAAI,SAACC,EAAIC,GAAK,OACrBH,EAAAA,EAAAA,KAACI,EAAAA,GAAAA,SAAoB,CAEnBC,MAAO,CACLC,MAAM,GAADQ,OACHX,GAASQ,EAAKI,mBAAqB,OAAS,WAE9ChB,UAEFC,EAAAA,EAAAA,KAACS,EAAAA,IAAU,KAPNN,EAQgB,aAK/BH,EAAAA,EAAAA,KAAA,KAAAD,SAAIY,EAAKK,cA/BEL,EAAKM,GAiCT,QAKrB,C","sources":["pages/ReviewsPage/Reviews.styled.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Stars = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StarButton = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  width: 300px;\r\n  @media screen and (min-width: 375px) {\r\n    width: 350px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 600px;\r\n  }\r\n  @media screen and (min-width: 1440px) {\r\n    width: 800px;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  height: 240px;\r\n  width: 100%;\r\n  background-color: #f1f4f5;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  overflow: auto;\r\n  overflow-y: scroll;\r\n  box-sizing: border-box;\r\n  @media screen and (min-width: 375px) {\r\n    height: 230px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    height: 200px;\r\n  }\r\n  @media screen and (min-width: 1440px) {\r\n    height: 220px;\r\n  }\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ItemDiv = styled.div`\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 20px;\r\n  box-sizing: border-box;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const UserDiv = styled.div`\r\n  border-radius: 50px;\r\n  background-color: #fff;\r\n  width: 30px;\r\n  padding: 6px 8px;\r\n  margin-right: 20px;\r\n  box-shadow: 3px 3px 11px -4px rgba(66, 68, 90, 1);\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  color: #007586;\r\n  text-shadow: 2px 2px 10px #007586;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const StarsTitle = styled.p`\r\n  margin-right: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const StarsText = styled.p`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport {\r\n  Stars,\r\n  StarButton,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  Div,\r\n  UserDiv,\r\n  UserName,\r\n  Title,\r\n  StarsTitle,\r\n  // StarsText,\r\n  ItemDiv,\r\n} from \"./Reviews.styled\";\r\nimport reviews from \"../../reviews.json\";\r\n\r\nconst ReviewsPage = () => {\r\n  const starArr = [1, 2, 3, 4, 5];\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Останні відгуки</Title>\r\n      <Div>\r\n        <StarsTitle>5.0</StarsTitle>\r\n        <Stars>\r\n          {starArr.map((el, index) => (\r\n            <IconContext.Provider\r\n              key={index}\r\n              value={{\r\n                color: \"orange\",\r\n                size: \"20px\",\r\n              }}\r\n            >\r\n              <StarButton type=\"button\">\r\n                <AiFillStar />\r\n              </StarButton>\r\n            </IconContext.Provider>\r\n          ))}\r\n        </Stars>\r\n      </Div>\r\n      {/* <StarsText>Базовано на відгуках: {reviews.length}</StarsText> */}\r\n      <List>\r\n        {reviews?.map((item) => (\r\n          <ListItem key={item.id}>\r\n            <ItemDiv>\r\n              <Div>\r\n                <UserDiv>\r\n                  <IconContext.Provider\r\n                    value={{\r\n                      color: \"#007586\",\r\n                      size: \"30px\",\r\n                    }}\r\n                  >\r\n                    <BiUser />\r\n                  </IconContext.Provider>\r\n                </UserDiv>\r\n                <div>\r\n                  <UserName>{item.name}</UserName>\r\n                  <Stars>\r\n                    {starArr.map((el, index) => (\r\n                      <IconContext.Provider\r\n                        key={index}\r\n                        value={{\r\n                          color: `${\r\n                            index >= item.totalPositiveStars ? \"#ccc\" : \"orange\"\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        <AiFillStar />\r\n                      </IconContext.Provider>\r\n                    ))}\r\n                  </Stars>\r\n                </div>\r\n              </Div>\r\n              <p>{item.comment}</p>\r\n            </ItemDiv>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReviewsPage;\r\n"],"names":["Stars","styled","_templateObject","_taggedTemplateLiteral","StarButton","_templateObject2","Container","_templateObject3","List","_templateObject4","ListItem","_templateObject5","Div","_templateObject6","ItemDiv","_templateObject7","UserDiv","_templateObject8","UserName","_templateObject9","Title","_templateObject10","StarsTitle","_templateObject11","_templateObject12","starArr","_jsxs","children","_jsx","map","el","index","IconContext","value","color","size","type","AiFillStar","reviews","item","BiUser","name","concat","totalPositiveStars","comment","id"],"sourceRoot":""}