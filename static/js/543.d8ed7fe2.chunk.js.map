{"version":3,"file":"static/js/543.d8ed7fe2.chunk.js","mappings":"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","sources":["pages/ReviewsPage/Reviews.styled.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Formik } from \"formik\";\r\n\r\nexport const Stars = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const StarButton = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormContainer = styled(Formik)`\r\n  width: 600px;\r\n  /* display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  border: 1px solid #007586;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Field } from \"formik\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Stars, StarButton, Container, FormContainer } from \"./Reviews.styled\";\r\nimport reviews from \"../../reviews.json\";\r\nconst ReviewsPage = () => {\r\n  const starArr = [1, 2, 3, 4, 5];\r\n  const [totalPositiveStars, setTotalPositiveStars] = useState(1);\r\n  console.log(totalPositiveStars);\r\n\r\n  const [feedback, setFeedback] = useState([]);\r\n  console.log(feedback);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    setFeedback([...feedback, { ...values, totalPositiveStars }]);\r\n    setTotalPositiveStars(1);\r\n    resetForm();\r\n  };\r\n  const handleClick = (e, index) => {\r\n    e.preventDefault();\r\n    return setTotalPositiveStars(index + 1);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer\r\n        initialValues={{\r\n          name: \"\",\r\n          comment: \"\",\r\n          totalPositiveStars: totalPositiveStars,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form>\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <Field\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter your name\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"comment\">Comment:</label>\r\n            <Field\r\n              type=\"text\"\r\n              id=\"comment\"\r\n              name=\"comment\"\r\n              placeholder=\"Enter your comment\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Stars>\r\n              {starArr.map((el, index) => (\r\n                <IconContext.Provider\r\n                  key={index}\r\n                  value={{\r\n                    color: `${index >= totalPositiveStars ? \"#ccc\" : \"orange\"}`,\r\n                  }}\r\n                >\r\n                  <StarButton\r\n                    type=\"button\"\r\n                    onClick={(e) => handleClick(e, index)}\r\n                  >\r\n                    <AiFillStar />\r\n                  </StarButton>\r\n                </IconContext.Provider>\r\n              ))}\r\n            </Stars>\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </FormContainer>\r\n\r\n      <ul>\r\n        {reviews?.map((item) => (\r\n          <li>\r\n            <p>{item.name}</p>\r\n            <p>{item.comment}</p>\r\n            <Stars>\r\n              {starArr.map((el, index) => (\r\n                <IconContext.Provider\r\n                  key={index}\r\n                  value={{\r\n                    color: `${\r\n                      index >= item.totalPositiveStars ? \"#ccc\" : \"orange\"\r\n                    }`,\r\n                  }}\r\n                >\r\n                  <AiFillStar />\r\n                </IconContext.Provider>\r\n              ))}\r\n            </Stars>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* <Stars>\r\n        {starArr.map((el, index) => (\r\n          <IconContext.Provider\r\n            key={index}\r\n            value={{\r\n              color: `${index >= totalPositiveStars ? \"#ccc\" : \"orange\"}`,\r\n            }}\r\n          >\r\n            <AiFillStar />\r\n          </IconContext.Provider>\r\n        ))}\r\n      </Stars> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReviewsPage;\r\n"],"names":["Stars","styled","_templateObject","_taggedTemplateLiteral","StarButton","_templateObject2","Container","_templateObject3","FormContainer","Formik","_templateObject4","starArr","_useState","useState","_useState2","_slicedToArray","totalPositiveStars","setTotalPositiveStars","console","log","_useState3","_useState4","feedback","setFeedback","_jsxs","children","_jsx","initialValues","name","comment","onSubmit","values","_ref","resetForm","concat","_toConsumableArray","_objectSpread","Form","htmlFor","Field","type","id","placeholder","map","el","index","IconContext","value","color","onClick","e","preventDefault","handleClick","AiFillStar","reviews","item"],"sourceRoot":""}